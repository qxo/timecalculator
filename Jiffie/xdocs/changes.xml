<?xml version="1.0" encoding="UTF-8"?>

<document>
   <properties>
      <title>Jiffie Changes</title> 
      <author email="jon.iles@bcs.org.uk">Jon Iles</author> 
   </properties> 

   <body> 

	<release version="1.1" date="CVS HEAD">
	</release>
	
   <release version="1.0" date="07/10/2007"> 
		<action dev="joniles" type="update">Updated to build with JDK 1.5</action>      
		<action dev="joniles" type="update">Updated to use Jaxen 1.1.1 for XPath support</action>      
		<action dev="joniles" type="update">Updated to use latest Jacob 1.13</action>
		<action dev="joniles" type="update">Updated to use generics</action>      
		<action dev="joniles" type="update">Updated to change package to net.sf.jiffie</action>
		<action dev="joniles" type="update">Updated to replace references to Tapster Rock with Packwood Software</action>
   </release>

   <release version="0.6" date="07/02/2007"> 
      <action dev="joniles" type="add">Added support for the form attribute on form elements. (Contributed by Joe Ferner).</action>
      <action dev="joniles" type="update">Updated to implement the full set of events generated by Internet Explorer. Note that events marked as "obsolete" or "not yet implemented" in Microsoft's documentation are not implemented by Jiffie.</action>      
      <action dev="joniles" type="add">Added sample code to demonstrate a method for handling modal and modeless dialogs.</action>
      <action dev="joniles" type="add">Added an accessor method for the frames property of an IHTMLDocument2.</action>
      <action dev="joniles" type="update">Checkstyle 4.0 updates.</action>  
      <action dev="joniles" type="update">Updated to use Jacob 1.11.1</action>  
   </release>

   <release version="0.5" date="28/02/2005"> 
      <action dev="joniles" type="add">Implemented support for XPath queries against the Internet Explorer DOM (Contributed by Piran Montford).</action>
      <action dev="joniles" type="add">Added support for IHTMLHtmlElement.</action>
      <action dev="joniles" type="update">Updated to use Jacob version 1.8 from SourceForge, and removed the full Jacob distribution from Jiffie.</action>
      <action dev="joniles" type="update">Simplified the internal implementation of the InternetExplorer class by removing the use of ActiveXControl.</action>
      <action dev="joniles" type="update">Made the InternetExplorer class a sub class of IDispatch, and as a result further simplified the implementation of this class.</action>
      <action dev="joniles" type="update">Updated methods in the ElementContainer class to switch from Object as the return type to IDispatch, as we know that all objects returned by these methods will be subclasses of IDispatch.</action>
      <action dev="joniles" type="add">Added an isReleased method to the Releaseable interface. This can be called to determine if a releaseable object has been released.</action>
      <action dev="joniles" type="add">Implemented TrackingElementFactory, which can be used either to debug unreleased entities created by Jiffie, or as a Garbage Collector, which will release unreleased entities for you.</action>
      <action dev="joniles" type="add">Implemented BlockingEventThread, which performs the same task as BlockingClickThread, but works with arbitrary events rather than mouse clicks.</action>
      <action dev="joniles" type="add">Implemented IHTMLPopup and IHTMLStyle (Contributed by Justin Law).</action>
      <action dev="joniles" type="add">Implemented write, writeln, get/setCookie, get/setDomain methods in IHTMLDocument2 (Contributed by Brian Wong).</action>
      <action dev="joniles" type="add">Implemented IHTMLDocument2.getDocumentElement (Contributed by Matthias Marschall).</action>
      <action dev="joniles" type="add">Implemented IHTMLTableCellElement.getCellIndex.</action>
      <action dev="joniles" type="update">Updated to ensure that when element properties are retrieved (e.g. getParentElement) the elements are created using the correct element factory.</action>
      <action dev="joniles" type="update">Renamed IHTMLTableCellElement to IHTMLTableCell and IHTMLTableRowElement to IHTMLTableRow for consistency with Microsoft's naming.</action>
      <action dev="joniles" type="add">Implemented the JiffieUtility.executeScript method, which allows arbitrary JavaScript to be executed in the context of an IHTMLDocument (Contributed by Justin Law).</action>
      <action dev="joniles" type="update">Rewrote the various readState methods so that rather than returning a mixture of int or String values, they all now return instances of the new ReadyState class, which provides an enumeration of the possible values that may be returned from these methods.</action>      
      <action dev="joniles" type="add">Implemented the JiffieTestCase class which provides the basis for Jiffie-based JUnit tests to be written (Contributed by Justin Law).</action>      
      <action dev="joniles" type="update">Rewrote JiffieTest to make it into a TestSuite, and to break up the original tests it contained into individual test classes for each Jiffie class.</action>      
      <action dev="joniles" type="add">Added support for IHTMLDocument2.execCommand (contributed by Brian Wong).</action>
      <action dev="joniles" type="add">Implemented IHTMLCurrentStyle and IHTMLElement.getCurrentStyle() (contributed by David Carr).</action>
      <action dev="joniles" type="add">Implemented getNodeName() and getNodeValue in IHTMLDOMNode (contributed by David Carr).</action>
      <action dev="joniles" type="add">Implemented accessor/modifier methods for HWND, top, left, height and width properties in InternetExplorer (contributed by David Carr).</action>
      <action dev="joniles" type="update">Updated jacob.dll to add Jacob patch #1105915 to address memory corruption and JVM crash problems.</action>
      <action dev="joniles" type="add">
         Implemented JiffieUtility.setEventHandlingEnabled(),
         JiffieUtility.getEventHandlingEnabled, and 
         InternetExplorer.enableEventHandling(). These methods allow event 
         handling to be disabled by default for all new browser instances, then
         selectively re-enabled for browser instances which specifically need 
         events. This improves Jiffie's performance and stability. Note that if
         you need to handle new windows opened by a browser when using Jiffie,
         you will need to enable event handling. By default event handling is
         enabled, ensuring that the default behaviour of Jiffie is not changed.
      </action>
      <action dev="joniles" type="update">
         Refactored Jiffie event handling to make it possible to supply user 
         defined event handlers. Two event handler implementations are now
         supplied, FullEventHandler (which is the default) and 
         NewWindowEventHandler. This facility has been designed to allow Jiffie
         users to make event handling efficient for their particular applications
         by defining only the events they are interested in. This improves Jiffie's
         efficiency and stability. The NewWindowEventHandler is likely to be the
         most useful as it only receives NewWindow2 events from Internet Explorer.
         These are the events required to handle any new windows created by
         Internet Explorer. Use the following code to set the default event
         handler before creating a new InternetExplorer instance.
         JiffieUtility.setEventHandlerFactory(new NewWindowEventHandlerFactory());
      </action>
      
      <action dev="joniles" type="update">
         Updated IHTMLStyle to allow attributes to be set via specific named methods.
      </action>      

      <action dev="joniles" type="update">
         Updated to use Jacob version 1.9.
      </action>      
   </release>
   
   <release version="0.4" date="20/10/2004"> 
      <action dev="joniles" type="update">Implemented major changes to the API to make handling HTMLElements more flexible. This change includes the removal of the get methods used to retrieve particular HTMLElement types. Please review the JUnit tests to see how these changes have affected the code. (Suggestions and contributions by Piran Montford)</action>      
      <action dev="joniles" type="update">Modified a number of methods to embed common calls to waitWhileBusy and waitWhileIncomplete. The modified methods now take a boolean parameter to indicate what the method should do. Passing false retains the old behaviour, passing true means that the method will wait until the parent browser is not busy and (if applicable) the parent document is complete. (Suggested by Piran Montford)</action>      
      <action dev="joniles" type="update">Updated JiffieUtility class to allow the status polling rate and timeout to be configured.</action>
      <action dev="joniles" type="add">Added support for IHTMLBodyElement.</action>
      <action dev="joniles" type="add">Added support for IHTMLDivElement, IHTMLFrameBase2, IHTMLTableCellElement, and IHTMLTableRowElement (contributed by Mark Richter).</action>
      <action dev="joniles" type="add">Implemented new window and navigation event handling and support for arbitrary window and navigation event listeners (contributed by Mark Richter)</action>      
      <action dev="joniles" type="add">Added item and tags methods to the ElementCollection class to emulate the behaviour of the IHTMLElementCollection methods of the same name.</action>
      <action dev="joniles" type="add">Added the convenience methods getElementListByNameAndTag, getElementByTag and getElementByNameAndTag to the ElementContainer class. Updated getElementByName to return null if there are no elements with the requested name.</action>
      <action dev="joniles" type="update">Modified BlockingClickThread to allow the caller to determine if the thread is still blocked.</action>
      <action dev="joniles" type="add">Added a new sendKeys method to JiffieUtility to allow the caller to poll and repeatedly send keystrokes avoiding the situation where keystrokes sent to Internet Explorer arrive before the modal dialog they are being sent to is visible.</action>      
      <action dev="joniles" type="add">Added the use of a Releaseable interface which is implemented by all classes for which the release method should be called when they are no longer required. (suggested by Piran Montford).</action>      
      <action dev="joniles" type="update">Updated the sendKeys method to throw an exception if focus could not be set to the requested window.</action>
   </release>

   <release version="0.3" date="28/07/2004"> 
      <action dev="joniles" type="add">Added support for IHTMLOptionElement (Contributed by Tim Langford)</action>
      <action dev="joniles" type="add">Added support for IHTMLElement getOuterText, getTagName and getParentElement (Contributed by Darius Cooper)</action>
      <action dev="joniles" type="add">Added support for IHTMLInput.getType and IHTMLOption.getSelected (Contributed by Darius Cooper)</action>
      <action dev="joniles" type="update">Modified JiffieTest.elementTest to make it more portable between different versions of IE. (Contributed by Darius Cooper)</action>
      <action dev="joniles" type="update">Updated to use Maven for documentation.</action>
   </release>

   <release version="0.2" date="30/04/2004"> 
      <action dev="joniles" type="fix">Fixed a bug causing arrays of elements generated by the get&lt;type&gt;Array() to contain null elements.</action>
      <action dev="joniles" type="update">Expanded the JUnit tests to illustrate how new windows are handled.</action>
      <action dev="joniles" type="update">Expanded the JUnit tests to illustrate how radio buttons are handled.</action>
      <action dev="joniles" type="update">Renamed some ElementCollection methods for consistency, particularly the getAll method is now getElements.</action>
      <action dev="joniles" type="add">Implemented additional attributes and methods for IHTMLFormElement.</action>
      <action dev="joniles" type="add">Added support for retrieval of collections of elements with the same name (e.g. radio buttons, checkboxes).</action>
   </release>

   <release version="0.2" date="26/04/2004"> 
      <action dev="joniles" type="add">Initial release.</action>
   </release>

   </body>
</document>



